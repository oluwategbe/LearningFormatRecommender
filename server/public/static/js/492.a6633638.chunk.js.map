{"version":3,"file":"static/js/492.a6633638.chunk.js","mappings":"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","sources":["modules/Admin/Login/hooks/index.js","modules/Admin/Login/index.js"],"sourcesContent":["import { axiosInstance } from \"../../../../axios-Instance\";\r\nimport { toast } from \"react-toastify\";\r\nimport { toastOptions } from \"../../../../utils\";\r\nimport { useContext } from \"react\";\r\nimport { AuthContext } from \"../../../../context\";\r\nimport { setLoginToken } from \"../../../../storage\";\r\nimport { useMutation } from \"@tanstack/react-query\";\r\n\r\nconst SERVER_ERROR = \"There was an error contacting the server.\";\r\n\r\nasync function userLogin(formData) {\r\n  const data = await axiosInstance({\r\n    url: \"/auth/login\",\r\n    method: \"POST\",\r\n    data: formData,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  return data?.data;\r\n}\r\n\r\nexport function useLogin() {\r\n  const authCtx = useContext(AuthContext);\r\n  const { mutate, isError, error, isSuccess, reset } = useMutation({\r\n    mutationFn: (formData) => userLogin(formData),\r\n    onSuccess: (data) => {\r\n      setLoginToken(data.token);\r\n      authCtx.authenticate(data.token);\r\n    },\r\n    onError: (error) => {\r\n      const err = error?.response?.data?.error\r\n        ? error?.response?.data?.error\r\n        : SERVER_ERROR;\r\n      toast.error(err, toastOptions);\r\n    },\r\n  });\r\n  return { mutate, isError, error, isSuccess, reset };\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Button, FormGroup, Input } from \"mtforms\";\r\nimport { useIsMutating } from \"@tanstack/react-query\";\r\nimport { useLogin } from \"./hooks\";\r\nimport { errorAlert, successAlert } from \"../../../utils\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { PrivatePaths } from \"../../../routes/path\";\r\n\r\nconst Login = () => {\r\n  const isLoading = useIsMutating();\r\n  const [formData, setFormData] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const navigate = useNavigate();\r\n  const handleChange = (name, value) => {\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n  const validationHandler = (name, error) => {\r\n    setErrors({ ...errors, [name]: error });\r\n  };\r\n\r\n  const { mutate, isSuccess, isError, error, reset } = useLogin();\r\n  if (isError) {\r\n    reset();\r\n    errorAlert(error);\r\n  }\r\n  if (isSuccess) {\r\n    reset();\r\n    successAlert(\"Login Successful\");\r\n    setFormData(\"\");\r\n    navigate(PrivatePaths.DASHBOARD);\r\n  }\r\n  const submitHandler = () => {\r\n    mutate(formData);\r\n  };\r\n  return (\r\n    <div className=\"loginContainer\">\r\n      <ToastContainer />\r\n\r\n      <div className=\"loginFormContainer\">\r\n        <div className=\"formPadding\">\r\n          <h1>Hello There!</h1>\r\n          <br />\r\n          <p>Please Enter your Email and Password</p>\r\n          <br />\r\n        </div>\r\n\r\n        <div>\r\n          <FormGroup\r\n            onSubmit={submitHandler}\r\n            validation={formData}\r\n            errors={errors}\r\n            setErrors={setErrors}\r\n          >\r\n            <Input\r\n              name=\"email\"\r\n              label=\"Email\"\r\n              value={formData[\"email\"]}\r\n              onChange={handleChange}\r\n              type=\"email\"\r\n              validationHandler={validationHandler}\r\n              error={errors.email}\r\n              required={true}\r\n              size=\"large\"\r\n            />\r\n            <Input\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              value={formData[\"password\"]}\r\n              onChange={handleChange}\r\n              type=\"password\"\r\n              validationHandler={validationHandler}\r\n              error={errors.password}\r\n              required={true}\r\n              size=\"large\"\r\n            />\r\n            <div className=\"formButtonContainer\">\r\n              <span>\r\n                Forgot Password? <Link to=\"/forgot-password\">Reset Now</Link>\r\n              </span>\r\n            </div>\r\n\r\n            <Button\r\n              title=\"Login\"\r\n              loading={isLoading === 1}\r\n              disabled={isLoading === 1}\r\n              size=\"large\"\r\n              className=\"btnPartner\"\r\n            />\r\n          </FormGroup>\r\n        </div>\r\n      </div>\r\n      <div className=\"bgContainer\">\r\n        <div className=\"overlay\">\r\n          <h1>AWS Partner</h1>\r\n          <p>Lotus Beta Analytics</p>\r\n        </div>\r\n        <div className=\"bgImages\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["_userLogin","_asyncToGenerator","_regeneratorRuntime","mark","_callee","formData","data","wrap","_context","prev","next","axiosInstance","url","method","headers","sent","abrupt","stop","apply","arguments","useLogin","authCtx","useContext","AuthContext","_useMutation","useMutation","mutationFn","_x","userLogin","onSuccess","setLoginToken","token","authenticate","onError","error","_error$response","_error$response$data","_error$response2","_error$response2$data","err","response","toast","toastOptions","mutate","isError","isSuccess","reset","isLoading","useIsMutating","_useState","useState","_useState2","_slicedToArray","setFormData","_useState3","_useState4","errors","setErrors","navigate","useNavigate","handleChange","name","value","_objectSpread","_defineProperty","validationHandler","_useLogin","errorAlert","successAlert","PrivatePaths","DASHBOARD","_jsxs","className","children","_jsx","ToastContainer","FormGroup","onSubmit","validation","Input","label","onChange","type","email","required","size","password","Link","to","Button","title","loading","disabled"],"sourceRoot":""}