{"version":3,"file":"static/js/788.6036ad39.chunk.js","mappings":"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","sources":["layout/index.js","modules/Admin/Admin/hooks/index.js","modules/Admin/Attendees/hooks/index.js","modules/Admin/Dashboard/index.js","modules/Admin/Partner/hooks/index.js","../node_modules/@tanstack/query-core/src/mutationObserver.ts","../node_modules/@tanstack/react-query/src/useMutation.ts"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { Navigation, Navbar, Header } from \"../components\";\r\nimport { AuthContext } from \"../context\";\r\n\r\nconst Layout = ({ children, name }) => {\r\n  const { user } = useContext(AuthContext);\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"appContainer\">\r\n        <Navigation name={name} user={user} />\r\n        <div className=\"contentsRight\">\r\n          <Navbar title={name} user={user} />\r\n          <div className=\"pageContents\">{children}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { axiosInstance } from \"../../../../axios-Instance\";\r\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\r\nimport { queryKeys } from \"../../../../react-query/constants\";\r\nimport { getLoginToken } from \"../../../../storage\";\r\n\r\n// const SERVER_ERROR = \"There was an error contacting the server.\";\r\n\r\nconst getAdmin = async () => {\r\n  const data = await axiosInstance({\r\n    url: \"/user\",\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${getLoginToken()}`,\r\n    },\r\n  });\r\n  return data?.data?.data;\r\n};\r\n\r\nexport function useAdmin() {\r\n  const fallback = [];\r\n  const { data = fallback } = useQuery({\r\n    queryKey: [queryKeys.admin],\r\n    queryFn: () => getAdmin(),\r\n  });\r\n  return data;\r\n}\r\n\r\nasync function userReg(formData) {\r\n  const data = await axiosInstance({\r\n    url: \"/auth/register\",\r\n    method: \"POST\",\r\n    data: formData,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  return data?.data;\r\n}\r\n\r\nasync function userUpdate(formData) {\r\n  const data = await axiosInstance({\r\n    url: `/user/${formData[\"_id\"]}`,\r\n    method: \"PUT\",\r\n    data: formData,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${getLoginToken()}`,\r\n    },\r\n  });\r\n\r\n  return data?.data;\r\n}\r\nasync function userDelete(formData) {\r\n  const data = await axiosInstance({\r\n    url: `/user/${formData[\"_id\"]}`,\r\n    method: \"DELETE\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${getLoginToken()}`,\r\n    },\r\n  });\r\n\r\n  return data?.data;\r\n}\r\n\r\nexport function useRegister() {\r\n  const queryClient = useQueryClient();\r\n  const { mutate, isError, error, isSuccess, reset } = useMutation({\r\n    mutationFn: (formData) => userReg(formData),\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries([queryKeys.admin]);\r\n    },\r\n  });\r\n  return { mutate, isError, error, isSuccess, reset };\r\n}\r\n\r\nexport function useUpdateAdmin() {\r\n  const queryClient = useQueryClient();\r\n  const { mutate, isError, error, isSuccess, reset } = useMutation({\r\n    mutationFn: (formData) => userUpdate(formData),\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries([queryKeys.admin]);\r\n    },\r\n  });\r\n  return { mutate, isError, error, isSuccess, reset };\r\n}\r\n\r\nexport function useDeleteAdmin() {\r\n  const queryClient = useQueryClient();\r\n  const { mutate, isError, error, isSuccess, reset } = useMutation({\r\n    mutationFn: (formData) => userDelete(formData),\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries([queryKeys.admin]);\r\n    },\r\n  });\r\n  return { mutate, isError, error, isSuccess, reset };\r\n}\r\n","import { axiosInstance } from \"../../../../axios-Instance\";\r\nimport { useQuery } from \"@tanstack/react-query\";\r\nimport { queryKeys } from \"../../../../react-query/constants\";\r\nimport { getLoginToken } from \"../../../../storage\";\r\n// const SERVER_ERROR = \"There was an error contacting the server.\";\r\n\r\nconst getPartner = async () => {\r\n  const data = await axiosInstance({\r\n    url: \"/attendee\",\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${getLoginToken()}`,\r\n    },\r\n  });\r\n  return data?.data?.data;\r\n};\r\n\r\nexport function useAttendees() {\r\n  const fallback = [];\r\n  const { data = fallback } = useQuery({\r\n    queryKey: [queryKeys.webinar],\r\n    queryFn: () => getPartner(),\r\n  });\r\n  return data;\r\n}\r\n","import React from \"react\";\r\nimport Layout from \"../../../layout\";\r\nimport { Card } from \"../../../components\";\r\nimport { FaFileAlt, FaFileArchive, FaUsers } from \"react-icons/fa\";\r\nimport { PrivatePaths } from \"../../../routes/path\";\r\nimport { usePartner } from \"../Partner/hooks\";\r\nimport { useAttendees } from \"../Attendees/hooks\";\r\nimport { useAdmin } from \"../Admin/hooks\";\r\n\r\nconst Dashbboard = () => {\r\n  const partners = usePartner();\r\n  const attend = useAttendees();\r\n  const admin = useAdmin();\r\n  return (\r\n    <Layout name=\"Dashboard\">\r\n      <div className=\"cardFlex\">\r\n        <Card\r\n          Icon={FaFileAlt}\r\n          title=\"Registered Partners\"\r\n          count={partners?.length}\r\n          url={PrivatePaths.PARTNERS}\r\n        />\r\n        <Card\r\n          Icon={FaFileArchive}\r\n          title=\"Registered Webinar Attendees\"\r\n          count={attend?.length}\r\n          url={PrivatePaths.ATTEND}\r\n        />\r\n        <Card\r\n          Icon={FaUsers}\r\n          title=\"Admins\"\r\n          count={admin?.length}\r\n          url={PrivatePaths.ADMIN}\r\n        />\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Dashbboard;\r\n","import { axiosInstance } from \"../../../../axios-Instance\";\r\nimport { useQuery } from \"@tanstack/react-query\";\r\nimport { queryKeys } from \"../../../../react-query/constants\";\r\nimport { getLoginToken } from \"../../../../storage\";\r\n\r\n// const SERVER_ERROR = \"There was an error contacting the server.\";\r\n\r\nconst getPartner = async () => {\r\n  const data = await axiosInstance({\r\n    url: \"/partner\",\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${getLoginToken()}`,\r\n    },\r\n  });\r\n  return data?.data?.data;\r\n};\r\n\r\nexport function usePartner() {\r\n  const fallback = [];\r\n  const { data = fallback } = useQuery({\r\n    queryKey: [queryKeys.partner],\r\n    queryFn: () => getPartner(),\r\n  });\r\n  return data;\r\n}\r\n","import { getDefaultState } from './mutation'\nimport { notifyManager } from './notifyManager'\nimport { Subscribable } from './subscribable'\nimport { shallowEqualObjects } from './utils'\nimport type { QueryClient } from './queryClient'\nimport type {\n  MutateOptions,\n  MutationObserverBaseResult,\n  MutationObserverOptions,\n  MutationObserverResult,\n} from './types'\nimport type { Action, Mutation } from './mutation'\n\n// TYPES\n\ntype MutationObserverListener<TData, TError, TVariables, TContext> = (\n  result: MutationObserverResult<TData, TError, TVariables, TContext>,\n) => void\n\ninterface NotifyOptions {\n  listeners?: boolean\n  onError?: boolean\n  onSuccess?: boolean\n}\n\n// CLASS\n\nexport class MutationObserver<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n> extends Subscribable<\n  MutationObserverListener<TData, TError, TVariables, TContext>\n> {\n  options!: MutationObserverOptions<TData, TError, TVariables, TContext>\n\n  private client: QueryClient\n  private currentResult!: MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TContext\n  >\n  private currentMutation?: Mutation<TData, TError, TVariables, TContext>\n  private mutateOptions?: MutateOptions<TData, TError, TVariables, TContext>\n\n  constructor(\n    client: QueryClient,\n    options: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    super()\n\n    this.client = client\n    this.setOptions(options)\n    this.bindMethods()\n    this.updateResult()\n  }\n\n  protected bindMethods(): void {\n    this.mutate = this.mutate.bind(this)\n    this.reset = this.reset.bind(this)\n  }\n\n  setOptions(\n    options?: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    const prevOptions = this.options\n    this.options = this.client.defaultMutationOptions(options)\n    if (!shallowEqualObjects(prevOptions, this.options)) {\n      this.client.getMutationCache().notify({\n        type: 'observerOptionsUpdated',\n        mutation: this.currentMutation,\n        observer: this,\n      })\n    }\n    this.currentMutation?.setOptions(this.options)\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.hasListeners()) {\n      this.currentMutation?.removeObserver(this)\n    }\n  }\n\n  onMutationUpdate(action: Action<TData, TError, TVariables, TContext>): void {\n    this.updateResult()\n\n    // Determine which callbacks to trigger\n    const notifyOptions: NotifyOptions = {\n      listeners: true,\n    }\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true\n    } else if (action.type === 'error') {\n      notifyOptions.onError = true\n    }\n\n    this.notify(notifyOptions)\n  }\n\n  getCurrentResult(): MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TContext\n  > {\n    return this.currentResult\n  }\n\n  reset(): void {\n    this.currentMutation = undefined\n    this.updateResult()\n    this.notify({ listeners: true })\n  }\n\n  mutate(\n    variables?: TVariables,\n    options?: MutateOptions<TData, TError, TVariables, TContext>,\n  ): Promise<TData> {\n    this.mutateOptions = options\n\n    if (this.currentMutation) {\n      this.currentMutation.removeObserver(this)\n    }\n\n    this.currentMutation = this.client.getMutationCache().build(this.client, {\n      ...this.options,\n      variables:\n        typeof variables !== 'undefined' ? variables : this.options.variables,\n    })\n\n    this.currentMutation.addObserver(this)\n\n    return this.currentMutation.execute()\n  }\n\n  private updateResult(): void {\n    const state = this.currentMutation\n      ? this.currentMutation.state\n      : getDefaultState<TData, TError, TVariables, TContext>()\n\n    const result: MutationObserverBaseResult<\n      TData,\n      TError,\n      TVariables,\n      TContext\n    > = {\n      ...state,\n      isLoading: state.status === 'loading',\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset,\n    }\n\n    this.currentResult = result as MutationObserverResult<\n      TData,\n      TError,\n      TVariables,\n      TContext\n    >\n  }\n\n  private notify(options: NotifyOptions) {\n    notifyManager.batch(() => {\n      // First trigger the mutate callbacks\n      if (this.mutateOptions && this.hasListeners()) {\n        if (options.onSuccess) {\n          this.mutateOptions.onSuccess?.(\n            this.currentResult.data!,\n            this.currentResult.variables!,\n            this.currentResult.context!,\n          )\n          this.mutateOptions.onSettled?.(\n            this.currentResult.data!,\n            null,\n            this.currentResult.variables!,\n            this.currentResult.context,\n          )\n        } else if (options.onError) {\n          this.mutateOptions.onError?.(\n            this.currentResult.error!,\n            this.currentResult.variables!,\n            this.currentResult.context,\n          )\n          this.mutateOptions.onSettled?.(\n            undefined,\n            this.currentResult.error,\n            this.currentResult.variables!,\n            this.currentResult.context,\n          )\n        }\n      }\n\n      // Then trigger the listeners\n      if (options.listeners) {\n        this.listeners.forEach(({ listener }) => {\n          listener(this.currentResult)\n        })\n      }\n    })\n  }\n}\n","'use client'\nimport * as React from 'react'\nimport {\n  MutationObserver,\n  notifyManager,\n  parseMutationArgs,\n} from '@tanstack/query-core'\nimport { useSyncExternalStore } from './useSyncExternalStore'\n\nimport { useQueryClient } from './QueryClientProvider'\nimport { shouldThrowError } from './utils'\nimport type { MutationFunction, MutationKey } from '@tanstack/query-core'\nimport type {\n  UseMutateFunction,\n  UseMutationOptions,\n  UseMutationResult,\n} from './types'\n\n// HOOK\n\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  options: UseMutationOptions<TData, TError, TVariables, TContext>,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  mutationFn: MutationFunction<TData, TVariables>,\n  options?: Omit<\n    UseMutationOptions<TData, TError, TVariables, TContext>,\n    'mutationFn'\n  >,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  mutationKey: MutationKey,\n  options?: Omit<\n    UseMutationOptions<TData, TError, TVariables, TContext>,\n    'mutationKey'\n  >,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  mutationKey: MutationKey,\n  mutationFn?: MutationFunction<TData, TVariables>,\n  options?: Omit<\n    UseMutationOptions<TData, TError, TVariables, TContext>,\n    'mutationKey' | 'mutationFn'\n  >,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  arg1:\n    | MutationKey\n    | MutationFunction<TData, TVariables>\n    | UseMutationOptions<TData, TError, TVariables, TContext>,\n  arg2?:\n    | MutationFunction<TData, TVariables>\n    | UseMutationOptions<TData, TError, TVariables, TContext>,\n  arg3?: UseMutationOptions<TData, TError, TVariables, TContext>,\n): UseMutationResult<TData, TError, TVariables, TContext> {\n  const options = parseMutationArgs(arg1, arg2, arg3)\n  const queryClient = useQueryClient({ context: options.context })\n\n  const [observer] = React.useState(\n    () =>\n      new MutationObserver<TData, TError, TVariables, TContext>(\n        queryClient,\n        options,\n      ),\n  )\n\n  React.useEffect(() => {\n    observer.setOptions(options)\n  }, [observer, options])\n\n  const result = useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  const mutate = React.useCallback<\n    UseMutateFunction<TData, TError, TVariables, TContext>\n  >(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop)\n    },\n    [observer],\n  )\n\n  if (\n    result.error &&\n    shouldThrowError(observer.options.useErrorBoundary, [result.error])\n  ) {\n    throw result.error\n  }\n\n  return { ...result, mutate, mutateAsync: result.mutate }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nfunction noop() {}\n"],"names":["_ref","children","name","user","useContext","AuthContext","_jsxs","_jsx","Header","className","Navigation","Navbar","title","getAdmin","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_data$data","data","wrap","_context","prev","next","axiosInstance","url","method","headers","Authorization","concat","getLoginToken","sent","abrupt","stop","apply","arguments","useAdmin","_useQuery$data","useQuery","queryKey","queryKeys","admin","queryFn","_userReg","_callee2","formData","_context2","_userUpdate","_callee3","_context3","_userDelete","_callee4","_context4","useRegister","queryClient","useQueryClient","_useMutation","useMutation","mutationFn","_x","userReg","onSuccess","invalidateQueries","mutate","isError","error","isSuccess","reset","useUpdateAdmin","_useMutation2","_x2","userUpdate","useDeleteAdmin","_useMutation3","_x3","userDelete","getPartner","useAttendees","webinar","partners","usePartner","attend","Layout","Card","Icon","FaFileAlt","count","length","PrivatePaths","PARTNERS","FaFileArchive","ATTEND","FaUsers","ADMIN","partner","MutationObserver","_Subscribable","_inherits","_super","_createSuper","client","options","_this","_classCallCheck","call","setOptions","bindMethods","updateResult","_createClass","key","value","this","bind","_this$currentMutation","prevOptions","defaultMutationOptions","shallowEqualObjects","getMutationCache","notify","type","mutation","currentMutation","observer","_this$currentMutation2","hasListeners","removeObserver","action","notifyOptions","listeners","onError","currentResult","undefined","variables","mutateOptions","build","_objectSpread","addObserver","execute","state","getDefaultState","result","isLoading","status","isIdle","_this2","notifyManager","batch","_this$mutateOptions$o","_this$mutateOptions","_this$mutateOptions$o2","_this$mutateOptions2","context","onSettled","_this$mutateOptions$o3","_this$mutateOptions3","_this$mutateOptions$o4","_this$mutateOptions4","forEach","listener","Subscribable","arg1","arg2","arg3","_React$useState","React","_slicedToArray","useSyncExternalStore","onStoreChange","subscribe","batchCalls","getCurrentResult","shouldThrowError","useErrorBoundary","noop"],"sourceRoot":""}